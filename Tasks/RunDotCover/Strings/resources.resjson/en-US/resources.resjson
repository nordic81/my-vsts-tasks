{
  "loc.friendlyName": "Run dotCover",
  "loc.helpMarkDown": "[More information](https://github.com/nordic81/my-vsts-tasks/blob/master/Tasks/RunDotCover/README.md)",
  "loc.description": "Runs VSTest under dotCover",
  "loc.instanceNameFormat": "Tests/Coverage - $(testAssembly)",
  "loc.group.displayName.executionOptions": "Execution Options",
  "loc.group.displayName.reportingOptions": "Reporting Options",
  "loc.group.displayName.advancedExecutionOptions": "Advanced Execution Options",
  "loc.input.label.sourcesDirectory": "Sources Directory",
  "loc.input.help.sourcesDirectory": "The root directory of your sources.",
  "loc.input.label.testAssembly": "Test Assembly",
  "loc.input.help.testAssembly": "Test binaries to run tests on. Wildcards can be used. For example, `**\\*test*.dll;-:**\\obj\\**` for all dlls with test in name while excluding files in any sub-directory named obj.",
  "loc.input.label.testFiltercriteria": "Test Filter criteria",
  "loc.input.help.testFiltercriteria": "Additional criteria to filter tests from Test assemblies. For example: Priority=1|Name=MyTestMethod",
  "loc.input.label.runSettingsFile": "Run Settings File",
  "loc.input.help.runSettingsFile": "Path to runsettings file to use with the tests. Use `$(Build.SourcesDirectory)` to access the Project folder.",
  "loc.input.label.dotCoverFilters": "dotCover Filter criteria",
  "loc.input.help.dotCoverFilters": "Additional criteria to filter what dotCover considers.",
  "loc.input.label.disableCodeCoverage": "Disable dotCover",
  "loc.input.help.disableCodeCoverage": "Disable dotCover. Run tests without coverage.",
  "loc.input.label.vstestLocationMethod": "Select test platform using",
  "loc.input.label.vsTestVersion": "Test platform version",
  "loc.input.help.vsTestVersion": "The version of Visual Studio test to use.",
  "loc.input.label.vstestLocation": "Path to vstest.console.exe",
  "loc.input.help.vstestLocation": "Optionally supply the path to VSTest.",
  "loc.input.label.testAdapterPath": "Path to Custom Test Adapters",
  "loc.input.help.testAdapterPath": "Directory path to custom test adapters. For example, `$(build.SourcesDirectory)\\packages`.",
  "loc.input.label.testAdditionalCommandLine": "Additional VSTest Options",
  "loc.input.help.testAdditionalCommandLine": "Other Console options that can be passed to vstest.console.exe. See [MSDN](https://msdn.microsoft.com/en-us/library/jj155796.aspx) for more information.",
  "loc.input.label.dotCoverAdditionalCommandLine": "Additional dotCover Options",
  "loc.input.help.dotCoverAdditionalCommandLine": "Other Console options that can be passed to dotcover.exe. See [dotCover Usage](https://www.jetbrains.com/help/dotcover/dotCover__Console_Runner_Commands.html) for more information.",
  "loc.input.label.toolsLocationMethod": "dotCover Tools",
  "loc.input.label.toolsBaseDirectory": "Path where tools are located",
  "loc.input.help.toolsBaseDirectory": "The base directory where dotCover tools are located (e.g. `$(build.sourcesDirectory)\\packages`).",
  "loc.input.label.enableDotCoverLog": "Enable dotCover logfile",
  "loc.input.help.enableDotCoverLog": "If enabled, dotCover creates a logfile which will be placed at `$(Build.SourcesDirectory)\\dotCover.log`.",
  "loc.input.label.nunit3MultiAssemblyWorkAround": "Enable Workaround for NUnit 3 tests with multiple assemblies",
  "loc.input.help.nunit3MultiAssemblyWorkAround": "If enabled, each detected test assembly runs in a separate vstest call. The code coverage results will then be merged, each test run creates an individual trx file.",
  "loc.input.label.testSeriesInfo": "Test Series",
  "loc.input.help.testSeriesInfo": "Gives information whether the test series contains out of multiple test tasks or not. If so, the code coverage results of all tasks will be aggregated into one by the last task of the series.",
  "loc.input.label.testRunTitle": "Test Run Title",
  "loc.input.help.testRunTitle": "Provide a name for the Test Run.",
  "loc.input.label.platform": "Platform",
  "loc.input.help.platform": "Platform against which the tests should be reported. If you have defined a variable for platform in your build task, use that here.",
  "loc.input.label.configuration": "Configuration",
  "loc.input.help.configuration": "Configuration against which the tests should be reported. If you have defined a variable for configuration in your build task, use that here.",
  "loc.input.label.publishRunAttachments": "Upload Test Attachments",
  "loc.input.help.publishRunAttachments": "Opt in/out of publishing test run level attachments."
}